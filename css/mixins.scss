@import "./variables.scss";

// ======================================================================================================
//
// Mixins
//
// ======================================================================================================

// --------------------------------------------------
// Utils
// --------------------------------------------------
// Clearfix Mixin
@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Sizing shortcuts
@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}

// --------------------------------------------------
// Positioning
// --------------------------------------------------
@mixin center-all($top: 50%, $right: 0, $bottom: 0, $left: 0){
  left: $left;
  margin: auto;
  position: absolute;
  right: $right;
  top: $top;
  transform: translateY(-$top);
}

@mixin center-vert($top: 50%, $bottom: 0){
  margin: auto;
  position: absolute;
  top: $top;
  transform: translateY(-$top);
}

@mixin center-horz($right: 0, $left: 0){
  left: $left;
  margin: auto;
  position: absolute;
  right: $right;
}

// --------------------------------------------------
// Responsive Breakpoints
// --------------------------------------------------
$breakpoints: (
  'xs' : ( min-width:  $break-xs  ),
  'sm' : ( min-width:  $break-sm  ),
  'md' : ( min-width:  $break-md  ),
  'lg' : ( min-width:  $break-lg  ),
  'xl' : ( min-width:  $break-xl  ),
  'xxl': ( min-width:  $break-xxl )
);

@mixin breakpoint($name) {
  @media #{inspect(map-get($breakpoints, $name))} {
    @content;
  }
}

@mixin breakpoint-width-one-off($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

@mixin breakpoint-width-min-height($name, $breakpoint) {
  @media #{inspect(map-get($breakpoints, $name))} and (min-height: $breakpoint) {
    @content;
  }
}

@mixin breakpoint-width-max-height($name, $breakpoint) {
  @media #{inspect(map-get($breakpoints, $name))} and (max-height: $breakpoint) {
    @content;
  }
}

// --------------------------------------------------
// Keyframe
// --------------------------------------------------
@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
